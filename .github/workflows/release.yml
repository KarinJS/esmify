name: release
on:
  push:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write
jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      lodash_release: ${{ steps.release.outputs['packages/lodash--release_created'] }}
      express_release: ${{ steps.release.outputs['packages/express--release_created'] }}
      dotenv_release: ${{ steps.release.outputs['packages/dotenv--release_created'] }}
      jsonwebtoken_release: ${{ steps.release.outputs['packages/jsonwebtoken--release_created'] }}
      log4js_release: ${{ steps.release.outputs['packages/log4js--release_created'] }}
      log4js_cjs_release: ${{ steps.release.outputs['packages/log4js-cjs--release_created'] }}
      redis_release: ${{ steps.release.outputs['packages/redis--release_created'] }}
      sqlite3_release: ${{ steps.release.outputs['packages/sqlite3--release_created'] }}
      ws_rerelease: ${{ steps.release.outputs['packages/ws--release_created'] }}
      node-pty_rerelease: ${{ steps.release.outputs['packages/node-pty--release_created'] }}
      sqlite3-cjs_release: ${{ steps.release.outputs['packages/sqlite3-cjs--release_created'] }}
      axios_rerelease: ${{ steps.release.outputs['packages/axios--release_created'] }}
      form-data_rerelease: ${{ steps.release.outputs['packages/form-data--release_created'] }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
  publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created == 'true' ||
      needs.release-please.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      - name: 设置 node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
      - name: 设置 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
      - name: 安装依赖
        run: pnpm install
      - name: 发布 lodash 包
        if: ${{ needs.release-please.outputs.lodash_release == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/lodash
        run: pnpm run build && pnpm run pub
      - name: 发布 express 包
        if: ${{ needs.release-please.outputs.express_release == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/express
        run: pnpm run build && pnpm run pub
      - name: 发布 dotenv 包
        if: ${{ needs.release-please.outputs.dotenv_release == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/dotenv
        run: pnpm run build && pnpm run pub
      - name: 发布 jsonwebtoken 包
        if: ${{ needs.release-please.outputs.jsonwebtoken_release == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/jsonwebtoken
        run: pnpm run build && pnpm run pub
      - name: 发布 log4js 包
        if: ${{ needs.release-please.outputs.log4js_release == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/log4js
        run: pnpm run build && pnpm run pub
      - name: 发布 log4js-cjs 包
        if: ${{ needs.release-please.outputs.log4js_cjs_release == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/log4js-cjs
        run: pnpm run build && pnpm run pub
      - name: 发布 redis 包
        if: ${{ needs.release-please.outputs.redis_release == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/redis
        run: pnpm run build && pnpm run pub
      - name: 发布 sqlite3-cjs 包
        if: ${{ needs.release-please.outputs.sqlite3-cjs_release == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: packages/sqlite3-cjs
        run: pnpm run build && pnpm run pub
      - name: 发布 sqlite3 包
        if: ${{ needs.release-please.outputs.sqlite3_release == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/sqlite3
        run: pnpm run build && pnpm run pub
      - name: 发布 ws 包
        if: ${{ needs.release-please.outputs.ws_rerelease == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: packages/ws
        run: pnpm run build && pnpm run pub
      - name: 发布 node-pty 包
        if: ${{ needs.release-please.outputs.node-pty_rerelease == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: packages/node-pty
        run: pnpm run build && pnpm run pub

      - name: 编译 form-data 包
        run: pnpm run build
        working-directory: packages/form-data
        if: ${{ needs.release-please.outputs.form-data_rerelease == 'true' || needs.release-please.outputs.axios_rerelease == 'true' }}

      - name: 发布 form-data 包
        if: ${{ needs.release-please.outputs.form-data_rerelease == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: packages/form-data
        run: pnpm run pub

      - name: 发布 axios 包
        if: ${{ needs.release-please.outputs.axios_rerelease == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: packages/axios
        run: pnpm run build && pnpm run pub
